name: Image
description: Build and publish image to ECR
inputs:
  aws-region:
    description: AWS region
    required: true
    default: 'eu-west-1'
  environment:
    description: Target CDK environment
    required: true
  role:
    description: Assume role
    required: true
  service-name:
    description: Service name
    required: true
    default: admin
  repository:
    description: ECR respository name
    required: true
    default: techloop/admin
runs:
  using: composite
  steps:
    - name: Checkout
      uses: actions/checkout@v3
    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        role-to-assume: ${{ inputs.role }}
        #role-session-name: MySessionName # Optional
        aws-region: ${{ inputs.aws-region }}
    - name: Login to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v1
    - name: Build, tag, and push image to Amazon ECR
      id: build-image
      env:
        ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
        IMAGE_TAG: ${{ github.sha }}
        ECR_REPOSITORY: ${{ inputs.repository }}
        AWS_REGION: ${{ inputs.aws-region }}
      run: |
        aws ecr get-login-password --region $AWS_REGION | docker login --username AWS --password-stdin $ECR_REGISTRY
        docker build . -f Dockerfile -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
        docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
        echo "image=$ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG" >> $GITHUB_OUTPUT
 